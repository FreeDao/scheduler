<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"
	xmlns:tool="http://www.springframework.org/schema/tool"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:bean="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:jdbc="http://www.springframework.org/schema/jdbc"

	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/task 
	http://www.springframework.org/schema/task/spring-task-3.2.xsd 
	http://www.springframework.org/schema/jdbc 
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	http://www.springframework.org/schema/tool
	http://www.springframework.org/schema/tool/spring-tool-3.2.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.2.xsd
	http://www.springframework.org/schema/batch 
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">
	
	<job id="job" job-repository="jobRepository" restartable="true">
		<step id="step">
			<tasklet start-limit="3">
				<chunk commit-interval="10" reader="reader" writer="writer"
					processor="processor" skip-policy="alwaysSkipItemSkipPolicy"
					retry-limit="3">
					<retryable-exception-classes>
						<include class="java.lang.Exception" />
					</retryable-exception-classes>
					<listeners>
	             		<listener >
	             			<bean:bean class="com.ruoogle.nova.job.listener.DataListener"/>
	             		</listener>
	             	</listeners>
				</chunk>
				<transaction-attributes isolation="DEFAULT"
					propagation="REQUIRED" timeout="30" />
			</tasklet>
		</step>
	</job>

	<bean:bean id="processor" class="com.ruoogle.nova.job.processor.MapDataItemProcessor" />
	<bean:bean id="alwaysSkipItemSkipPolicy" class="org.springframework.batch.core.step.skip.AlwaysSkipItemSkipPolicy" />

	<bean:bean id="reader" class="org.springframework.batch.item.database.JdbcPagingItemReader">
		<bean:property name="dataSource" ref="dataSource"/>
		<bean:property name="pageSize" value="10"/>
		<bean:property name="rowMapper">
			<bean:bean class="org.springframework.jdbc.core.ColumnMapRowMapper"></bean:bean>
		</bean:property>
		<bean:property name="queryProvider" ref="pagingQueryProvider" />
		<bean:property name="parameterValues" ref="parameterValues"/>
	</bean:bean>
	
	<util:map id="parameterValues" scope="step" 
		key-type="java.lang.String" 
		value-type="java.lang.Long" 
		map-class="java.util.HashMap">
		<bean:entry key="id" value="#{jobParameters['id']}"/>
	</util:map>

	<bean:bean id="pagingQueryProvider" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
		<bean:property name="dataSource" ref="dataSource" />
		<bean:property name="databaseType" value="MySQL" />
		<bean:property name="fromClause" value="usr_info" />
		<bean:property name="whereClause" value="id &lt; :id" />
		<bean:property name="selectClause" value="id, name, password, extend" />
		<bean:property name="sortKey" value="id"/>
	</bean:bean>

	<bean:bean id="writer" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<bean:property name="dataSource" ref="dataSource" />
		<bean:property name="sql" value="insert into usr_info(name, password, extend) values (:name, :password, :extend)" />
		<bean:property name="itemSqlParameterSourceProvider">
			<bean:bean class="com.ruoogle.nova.job.data.MapItemSqlParameterSourceProvider" />
		</bean:property>
	</bean:bean>
	
	<!-- 
	<bean:bean id="jdbcItemReader"
        class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <bean:property name="dataSource" ref="dataSource" />
        <bean:property name="sql"
            value="select id, name, name_pre, password, extend from etl_user where id &lt; ?" />
        <bean:property name="rowMapper">
            <bean:bean class="org.springframework.jdbc.core.BeanPropertyRowMapper">
                <bean:property name="mappedClass"
                    value="org.christ.matrix.etl.data.ETLUser" />
            </bean:bean>
        </bean:property>
        <bean:property name="preparedStatementSetter" ref="paramStatementSetter" />
    </bean:bean>
    
    <bean:bean id="eTLParamStatementSetter"
        class="org.christ.matrix.etl.data.ETLPreparedStatementSetter"/>

    <bean:bean id="paramStatementSetter"
        class="org.springframework.batch.core.resource.ListPreparedStatementSetter" 
        scope="step">
        <bean:property name="parameters">
            <bean:list>
                <bean:value>#{jobParameters['id']}</bean:value>
            </bean:list>
        </bean:property>
    </bean:bean>
    
    <bean:bean id="jdbcItemWriter"
        class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <bean:property name="dataSource" ref="dataSource" />
        <bean:property name="sql"
            value="insert into etl_user(id, name, name_pre, password, extend)
                   values
                  (:id, :name, :namePre, :password, :extend)" />
        <bean:property name="itemSqlParameterSourceProvider">
            <bean:bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </bean:property>
    </bean:bean>
	 -->

</bean:beans>